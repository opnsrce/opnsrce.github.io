name: Deploy Hugo site (GitHub Actions Pages)

on:
  push:
    branches: [master]
  schedule:
    - cron: '5 * * * *' # every hour at :05 UTC
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages-deploy
  cancel-in-progress: true

jobs:
  precheck:
    runs-on: ubuntu-latest
    outputs:
      build: ${{ steps.check.outputs.build }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - id: check
        name: Detect content due now (UTC)
        shell: bash
        run: |
          set -euo pipefail
          BUILD="$(python3 ./.devops/should_build.py)"
          if [[ "$BUILD" != "true" && "$BUILD" != "false" ]]; then
            echo "Precheck returned garbage: $BUILD" >&2
            exit 1
          fi
          echo "build=${BUILD}" >> "$GITHUB_OUTPUT"
          echo "should-build=${BUILD}"

  build:
    runs-on: ubuntu-latest
    needs: [precheck]
    # Always build on push/dispatch; only build on schedule if something is due
    if: github.event_name != 'schedule' || needs.precheck.outputs.build == 'true'
    timeout-minutes: 15
    env:
      HUGO_CACHEDIR: ${{ github.workspace }}/.hugo_cache
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cache Hugo
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.HUGO_CACHEDIR }}
            resources
            ~/go/pkg/mod
          key: ${{ runner.os }}-hugo-${{ hashFiles('**/hugo.json','**/go.mod','**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-hugo-

      - name: Set up Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.146.0'
          extended: true

      - name: Build site
        run: hugo --gc --minify --config hugo.json

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: needs.build.result == 'success'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    timeout-minutes: 10
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
